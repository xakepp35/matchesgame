 
# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3'

# Define services
services:

    db:
        image: postgres
        restart: always
        environment:
          POSTGRES_PASSWORD: matches
          POSTGRES_USER: matches
          POSTGRES_DB: matches
        volumes:
            - db-data:/var/lib/postgresql/data
            - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - backend

    # отладка содержимого дбшки
    adminer:
        image: adminer
        restart: always
        depends_on: 
            - db
        ports:
            - 9090:8080
        environment:
            ADMINER_DEFAULT_DB_DRIVER: pgsql
            ADMINER_DEFAULT_DB_HOST: db
            ADMINER_DEFAULT_DB_NAME: matches
            ADMINER_SERVER: db
            ADMINER_DB: matches
            ADMINER_PASSWORD: matches
            ADMINER_USERNAME: matches
            ADMINER_AUTOLOGIN: 1
        networks:
            - backend    

    backend:
        build:
            context: ./backend 
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        restart: unless-stopped
        depends_on: 
            - db
        environment:
            DB_URL: db:redis:6379    
        networks:
            - backend

    frontend:
        build:
            context: ./frontend 
            dockerfile: Dockerfile        
        networks:
            - frontend
            - backend

     # Redis Service   
    # redis:
    #     image: "redis:alpine" # Use a public Redis image to build the redis service    
    #     restart: unless-stopped
    #     networks:
    #         - backend

networks:
    frontend:
    backend:

volumes:
    db-data: